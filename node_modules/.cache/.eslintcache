[{"/Users/mazinesuliman/Documents/GitHub/ts-cs1300-deployment/src/index.tsx":"1","/Users/mazinesuliman/Documents/GitHub/ts-cs1300-deployment/src/reportWebVitals.ts":"2","/Users/mazinesuliman/Documents/GitHub/ts-cs1300-deployment/src/App.tsx":"3","/Users/mazinesuliman/Documents/GitHub/ts-cs1300-deployment/src/components/item.tsx":"4"},{"size":645,"mtime":1669943345796,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1669942177537,"results":"7","hashOfConfig":"6"},{"size":9676,"mtime":1669963384043,"results":"8","hashOfConfig":"6"},{"size":1936,"mtime":1669963043131,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"14"},"k85y5q",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/mazinesuliman/Documents/GitHub/ts-cs1300-deployment/src/index.tsx",["25"],[],"// import { ColorModeScript } from \"@chakra-ui/react\"\nimport * as React from \"react\"\nimport * as ReactDOM from \"react-dom/client\"\nimport { App } from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"/Users/mazinesuliman/Documents/GitHub/ts-cs1300-deployment/src/reportWebVitals.ts",[],[],"/Users/mazinesuliman/Documents/GitHub/ts-cs1300-deployment/src/App.tsx",["26","27","28","29"],[],"/Users/mazinesuliman/Documents/GitHub/ts-cs1300-deployment/src/components/item.tsx",["30"],[],"import React, { useState } from 'react';\nimport \"./item.css\"\nimport {\n\tButton, CardFooter\n} from \"@chakra-ui/react\"\n\n//Iterface for Items in website \nexport interface IItem {\n  itemName: string,\n  itemType: string,\n  itemId: number,\n  itemDescription: string,\n  price: string,\n  imageUrl: string,\n}\n\n//Interface for props\nexport interface IItemProps {\n\titemName: string,\n\titemType: string,\n\titemId: number,\n  itemDescription: string,\n  price: string,\n  imageUrl: string,\n\tcart: IItem[]\n\tcartOn: boolean,\n\tsetCart: (cart: IItem[]) => void\n\ttotal: number,\n\tsetTotal: (total: number) => void\n}\n\nexport const Item = (props: IItemProps) => {\n\tconst { itemName, itemType, itemId, itemDescription, price, imageUrl, cart, cartOn, setCart, total, setTotal} = props\n\tconst [selected, setSelected] = useState(false);\n\t\n\n\tconst handleSelect = () => {\n\t\tif (!selected) {\n\t\t\t\n\t\t\tconst newArray: IItem[] = JSON.parse(JSON.stringify(cart))\n\t\t\tconst hello = newArray.concat([{itemName, itemType, itemId, itemDescription, price, imageUrl}])\n\t\t\tsetTotal(total + +price)\n\t\t\tsetCart(hello)\n\t\t\t\n\t\t} else {\n\t\t\tconst newArray: IItem[] = cart.filter(item => item.itemId !== itemId)\n\t\t\tsetTotal(total - +price)\n\t\t\tsetCart(newArray)\n\t\t}\n\t\tsetSelected(!selected)\t\t\n\t}\n\n\treturn (\n\t\t<div className=\"item-wrapper\">\n\t\t\t\t<div className=\"left-flex\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t<div><b> #{itemId} </b></div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div className=\"itemName\"><b>{itemName}</b></div>\n\t\t\t\t\t\t<div><i> {price} Â¥</i></div>\n\t\t\t\t\t\t<div><b>Type: </b>{itemType}</div>\n\t\t\t\t\t\t<div>{itemDescription}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t{cartOn && <Button colorScheme='teal' variant={selected ? \"outline\" : \"solid\"} size='s'  onClick={handleSelect}>\n\t\t\t\t\t{selected ? \"Remove  Item From Cart\" : \"Add Item to cart\"}\n\t\t\t\t\t</Button>}\t\n\t\t\t</div>\n\t\t\t\t\n\t\t\n\t\t\t<div>\n\t\t\t\t<img src={imageUrl} alt= {itemName}  width=\"250\" height=\"350\"></img>\n\t\t\t</div>\n\t\t</div>\n\t);\n}",{"ruleId":"31","severity":1,"message":"32","line":6,"column":13,"nodeType":"33","messageId":"34","endLine":6,"endColumn":26},{"ruleId":"31","severity":1,"message":"35","line":14,"column":10,"nodeType":"33","messageId":"34","endLine":14,"endColumn":53},{"ruleId":"31","severity":1,"message":"36","line":142,"column":9,"nodeType":"33","messageId":"34","endLine":142,"endColumn":16},{"ruleId":"37","severity":1,"message":"38","line":146,"column":5,"nodeType":"39","endLine":146,"endColumn":32,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":215,"column":44,"nodeType":"43","messageId":"44","endLine":215,"endColumn":46},{"ruleId":"31","severity":1,"message":"45","line":4,"column":10,"nodeType":"33","messageId":"34","endLine":4,"endColumn":20},"@typescript-eslint/no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","'createTypeReferenceDirectiveResolutionCache' is defined but never used.","'priceId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'displayCards'. Either include it or remove the dependency array.","ArrayExpression",["46"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'CardFooter' is defined but never used.",{"desc":"47","fix":"48"},"Update the dependencies array to be: [type, priceFilter, sortId, displayCards]",{"range":"49","text":"50"},[5070,5097],"[type, priceFilter, sortId, displayCards]"]